version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "k1-topic:1:1,k2-topic:1:1"
    restart: always 

  #Cassandra
  cassandradatabase:
      image: cassandra
      container_name: cassandradb
      ports:
        - "9042:9042"
      environment:
        - CASSANDRA_HOST=cassandradb
        - CASSANDRA_RPC_ADDRESS=0.0.0.0

#M1 Application
  m1application:
    ports:
      - "8081:8081"
    build:
      context: MicroService1/M1
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
    container_name: m1_container
    depends_on:
      - kafka


#M2 Application
  m2application:
    ports:
      - "8082:8082"
    build:
      context: MicroService2/M2
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
    container_name: m2_container
    depends_on:
      - kafka
    restart: always

#M3 Application
  m3application:
    ports:
      - "8083:8083"
    build:
      context: MicroService3/M3
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
    container_name: m3_container
    depends_on:
      - kafka
      - cassandradatabase
    restart: always

  web:
    ports:
      - "7081:80"
    build:
      context: FrontEnd_v1_2
      dockerfile: Dockerfile
    container_name: frontend_v1_2
    restart: always



